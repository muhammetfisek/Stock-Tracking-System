<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>